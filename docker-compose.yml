version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: compas_postgresql
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: compas
      PGDATA: /var/lib/postgresql/data/compas
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - compas-network

  keycloak:
    image: compas_keycloak:latest  # Assuming the Keycloak image is already built
    container_name: compas_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8089:8080"
    networks:
      - compas-network

  compas-scl-data-service:
    image: lfenergy/compas-scl-data-service:0.15.3-SNAPSHOT-postgresql  # Use the latest compas-scl-data-service image, you can generate it with ./mvnw package -Pnative-image
    container_name: compas-scl-data-service
    depends_on:
      - postgres
      - transnetbw-elo-connector
    ports:
      - "8080:8080"
    environment:
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
      POSTGRESQL_DB: compas
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      # JWT Security Variables
      JWT_VERIFY_KEY: http://localhost:8089/auth/realms/compas/protocol/openid-connect/certs
      JWT_VERIFY_ISSUER: http://localhost:8089/auth/realms/compas
      JWT_VERIFY_CLIENT_ID: scl-data-service
      JWT_GROUPS_PATH: resource_access/scl-data-service/roles
      # UserInfo variables
      USERINFO_NAME_CLAIMNAME: name
      USERINFO_WHO_CLAIMNAME: name
      USERINFO_SESSION_WARNING: 20
      USERINFO_SESSION_EXPIRES: 30
      # ELO Connector
      ELO_CONNECTOR_ENABLED: true
      ELO_CONNECTOR_BASE_URL: http://elo-connector:8080/compas-elo-connector/api
    restart: on-failure # will restart until it's success
    networks:
      - compas-network

  transnetbw-elo-connector:
    image: transnetbw/compas-elo-connector:1.0.0-SNAPSHOT
    container_name: elo-connector
    depends_on:
      - keycloak
    ports:
      - "8181:8080"
    environment:
      # JWT Security Variables
      JWT_VERIFY_KEY: http://localhost:8089/auth/realms/compas/protocol/openid-connect/certs
      JWT_VERIFY_ISSUER: http://localhost:8089/auth/realms/compas
      JWT_VERIFY_CLIENT_ID: scl-data-service
      JWT_GROUPS_PATH: resource_access/scl-data-service/roles
      # UserInfo variables
      USERINFO_NAME_CLAIMNAME: name
      USERINFO_WHO_CLAIMNAME: name
      USERINFO_SESSION_WARNING: 20
      USERINFO_SESSION_EXPIRES: 30
    restart: on-failure
    networks:
      - compas-network

  wiremock:
    image: "wiremock/wiremock:3.10.0-alpine"
    container_name: wiremock-dev
    ports:
      - "48080:8080"
    volumes:
      - ./_dev/wiremock_resources/mappings:/home/wiremock/mappings
      - ./_dev/wiremock_resources/__files:/home/wiremock/__files
    entrypoint: [
      "/docker-entrypoint.sh",
      "--global-response-templating",
      "--disable-gzip"
    ]
    networks:
      - compas-network

networks:
  compas-network:
    driver: bridge
